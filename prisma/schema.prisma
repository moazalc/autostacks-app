generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid())
  email     String        @unique
  password  String
  createdAt DateTime      @default(now())
  username  String        @unique
  imgUrl    String?
  accounts  AccountUser[]
}

model Account {
  id        String        @id @default(uuid())
  name      String
  createdAt DateTime      @default(now())
  users     AccountUser[]
  balances  Balance?
  cars      Car[]
  entries   Entry[]
}

model AccountUser {
  id        String  @id @default(uuid())
  userId    String
  accountId String
  account   Account @relation(fields: [accountId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, accountId])
}

model Car {
  id        String    @id @default(uuid())
  accountId String
  buyPrice  Float
  buyDate   DateTime
  sellPrice Float?
  sellDate  DateTime?
  notes     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  imgUrl    String?
  make      String
  model     String
  year      Int
  account   Account   @relation(fields: [accountId], references: [id])
  Entry     Entry[]
}

model Entry {
  id           String    @id @default(uuid())
  accountId    String
  amount       Float
  type         EntryType
  description  String?
  relatedCarId String?
  date         DateTime
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  account      Account   @relation(fields: [accountId], references: [id])
  relatedCar   Car?      @relation(fields: [relatedCarId], references: [id])
}

model Balance {
  id        String   @id @default(uuid())
  accountId String   @unique
  amount    Float
  updatedAt DateTime @updatedAt
  account   Account  @relation(fields: [accountId], references: [id])
}

enum EntryType {
  CREDIT
  DEBIT
}
